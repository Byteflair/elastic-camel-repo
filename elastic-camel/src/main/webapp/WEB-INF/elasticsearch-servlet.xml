<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:broker="http://activemq.apache.org/schema/core"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring-2.10.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- lets configure the ActiveMQ JMS broker server to listen on TCP 61610 -->
	<broker:broker useJmx="false" persistent="false" brokerName="mq">
		<broker:transportConnectors>
			<!-- expose a VM transport for in-JVM transport between AMQ and Camel on the server side -->
			<broker:transportConnector name="vm" uri="vm://localhost" />
		</broker:transportConnectors>
	</broker:broker>
	
	<!-- lets configure the Camel ActiveMQ to use the embedded ActiveMQ broker declared above -->
	<bean id="jms" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="brokerURL" value="vm://localhost" />
	</bean>
	
	<camel:camelContext id="camelContext">
		<camel:template id="webProducerTemplate"/>
		
		<camel:route>
			<camel:from uri="direct:elastic.index.place" />
			<camel:to uri="jms:queue:elastic.index.place?jmsMessageType=Object" />
		</camel:route>
		<camel:route>
			<camel:from uri="jms:queue:elastic.index.place" />
			<camel:marshal>
				<camel:custom ref="placeJsonDataFormatDefinition"/>
			</camel:marshal>
			<camel:setHeader headerName="CamelHttpMethod"><camel:constant>PUT</camel:constant></camel:setHeader>
			<camel:setHeader headerName="CamelHttpCharacterEncoding"><camel:constant>UTF-8</camel:constant></camel:setHeader>
			<camel:to uri="http://localhost:9200/directory/_bulk" />
		</camel:route>
	</camel:camelContext>
	
    <bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
    
	<bean id="placeJsonDataFormatDefinition" class="org.apache.camel.model.DataFormatDefinition">
		<constructor-arg ref="placeJsonDataFormat" />
	</bean>
	
	<bean id="placeJsonDataFormat" class="com.byteflair.elasticcamel.i9n.PlaceJsonDataFormat"/>
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>        
    </bean>
    
    <mvc:annotation-driven />
    
    <context:component-scan base-package="com.byteflair.elasticcamel.controller" />
    
</beans>